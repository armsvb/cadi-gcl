Cadi sensors
==========

Cadi firmware has a number of drivers to provide support for sensors.
The following basic values are supported by system:
- pH
- EC (electrical conductivity)
- Temperature
- Humidity
- CO2
- Water presence

DRIVERS
Cadi firmware has built-in support for DHT22 sensors (for DHT11 use test function providing delays measured by PWMInput to adjust the buffer offset and if condition values to proper ones, if needed). The temperature and humidity data provided with these sensors to Cadi, if properly connected (see wiring diagram).
The EC and pH levels measurement support based on ADC input, that is connected to pH and EC electrodes amplifiers giving voltage range 0..3.3V to convert into 12 bit value from 0 to 4095. The device has a calibration functions to adjust the proper reading for these sensors, using calibration liquids.
Water presence measured by reading from digital input of STM32 uC, where amplifier for water presence sensors is connected.
Each sensor driver provide the reading into Cadi system for further processing. The values have different types. So the driver should provide universal API mechanism to access the sensor data from other parts of software. Below is a list of sensor types that have different drivers:
- DHT22 (temp, humidity)
- pH, EC, CO2 (ADC)
- water level (digital read)

So, at least, we have 3 kinds of data, that should be read different ways.
Let's see at these values ranges we need to store then as user settings:
- DHT22 temp, values:[0..999] (0..99.9 degrees Celsius), DHT22 humidity, values:[0..999] (0..99.9% rH) - 10bits
- pH, EC, CO2. values:[0..4095] - 12 bits
- water level. values[0..1] - 1bit

Each driver has capability to serve multiple sensors of this type. For example, DHT22 driver can bring up to 4 devices of this type.Compiler defines are used to adjust the number of sensors and their GPIOs to be used with firmware version to be compiled.

SDP - Sensor Data Provider
The sensor driver provided data stored into variable array of corresponding type. Sensor driver arrays have prefix sdp_ (Sensor Data Provider (or Pool))
Examples:
	- sdp_ph	-	data variables for pH readings. Array of uint16_t,, where first 4 bits are the sensor ID, and rest 12 - value
	- sdp_t	-	temperature data. uint16_t
	- sdp_ws	-	one uint8_t for 8 sensors

Functions, reading from SDP should care about data types they read.
The sensor IDs are defined with #define directive of compiler for exact hardware config. Another #define gives a possibility to compile the firmware with user-defineable Sensor IDs and STM32 hardware pins for sensor.


SENSOR VALUE CONVERSIONS
To display those values they should be properly transformed into readable format to show them on HD44780. And, possibly, transmitted through UART.
Functions that adjust windows have built-in format conversion tools to display human-understandable values during window setup. The same tools are used to display current sensor values in Monitor Mode and other display modes.
Each type has it's own conversion toolkit.
Examples:
	DHT22 provides a value in a range from 0 to 999, representing the temperature in a range from 0 to 99.9 degrees. Conversion tool accepts a uint16_t value and returns a reference to 4 byte char array having something like "23.0" in it. Adjustment of temperature is done through a 16bit value inc/dec redisplaying its conversion function every change. So user adjust 230 to 231 but sees "23.0" changes to "23.1" on display.
	For ADC values converted into pH, EC and other Cadi firmware optionally (in test/advanced modes) shows user the true value due to possible precision loses due to conversion.
	Water presence if needed to be set up done through universal 1 bit adjuster.
	



WINDOWS

Cadi could have up to 32 windows. Window - is a set of two values MIN and MAX. They represent the gap, within which system works in "default" mode. If sensor reads a value over this gap, the Cadi could perform attempts to get the value back into this gap (turn heater/cooler on/off).
	To represent the current reading position relatively to window there is a variable storing a number, meaning the position. 1 - under window (means, below MIN value), 2 - within window (within the gap), 3 - above window.
	Each window is associated with corresponding sensor ID.
	Sensor ID list is predefined during firmware compilation. Window settings are loaded for each Sensor ID from this list within loadSettings() function.
	Window settings are loaded into Window Settings Registers. Chains could be linked to plugs. Chains could represent multiple timers ANDed with Window Position (current sensor value position relatively to window). So they will trigger ON, only when chain of timers is ON and the window position equals to desired (WCE value of Chain. See Timer System v2).
	Cadi could store up to 32 Windows. Each window is associated with corresponding SDP value. Window Position Trigger (WPT) triggers the window position values. Window settings are kept in array. They store the reference to SDP value and last evalueated position for this window. The WPT loop has an array of Window IDs to evaluate, and first element of this array shows the number of elements to process during the loop. This array is preloaded within loadSettings() function for all the chains processed if WCE>0.
	


SENSORS
	Each sensor has an ID. Beside that it also has a type value. For example, DHT22 sensor has a type of 

